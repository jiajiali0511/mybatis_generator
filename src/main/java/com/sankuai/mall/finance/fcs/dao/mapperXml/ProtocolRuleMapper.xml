<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sankuai.mall.finance.fcs.dao.mapper.ProtocolRuleMapper" >
  <resultMap id="BaseResultMap" type="com.sankuai.mall.finance.fcs.dao.po.ProtocolRule" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="protocol_id" property="protocolId" jdbcType="BIGINT" />
    <result column="protocol_no" property="protocolNo" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
    <result column="invoice_flag" property="invoiceFlag" jdbcType="INTEGER" />
    <result column="pay_method" property="payMethod" jdbcType="INTEGER" />
    <result column="is_unreceived" property="isUnreceived" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="valid" property="valid" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="statistic_time" property="statisticTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, protocol_id, protocol_no, start_time, end_time, invoice_flag, pay_method, is_unreceived, 
    create_time, update_time, create_by, update_by, valid, remark, statistic_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRuleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from protocol_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from protocol_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from protocol_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRuleCriteria" >
    delete from protocol_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRule" >
    insert into protocol_rule (id, protocol_id, protocol_no, 
      start_time, end_time, invoice_flag, 
      pay_method, is_unreceived, create_time, 
      update_time, create_by, update_by, 
      valid, remark, statistic_time
      )
    values (#{id,jdbcType=BIGINT}, #{protocolId,jdbcType=BIGINT}, #{protocolNo,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{invoiceFlag,jdbcType=INTEGER}, 
      #{payMethod,jdbcType=INTEGER}, #{isUnreceived,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{valid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{statisticTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRule" >
    insert into protocol_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="protocolId != null" >
        protocol_id,
      </if>
      <if test="protocolNo != null" >
        protocol_no,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="invoiceFlag != null" >
        invoice_flag,
      </if>
      <if test="payMethod != null" >
        pay_method,
      </if>
      <if test="isUnreceived != null" >
        is_unreceived,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="valid != null" >
        valid,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="statisticTime != null" >
        statistic_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="protocolId != null" >
        #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="protocolNo != null" >
        #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="invoiceFlag != null" >
        #{invoiceFlag,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null" >
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="isUnreceived != null" >
        #{isUnreceived,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="statisticTime != null" >
        #{statisticTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRuleCriteria" resultType="java.lang.Integer" >
    select count(*) from protocol_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update protocol_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.protocolId != null" >
        protocol_id = #{record.protocolId,jdbcType=BIGINT},
      </if>
      <if test="record.protocolNo != null" >
        protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.invoiceFlag != null" >
        invoice_flag = #{record.invoiceFlag,jdbcType=INTEGER},
      </if>
      <if test="record.payMethod != null" >
        pay_method = #{record.payMethod,jdbcType=INTEGER},
      </if>
      <if test="record.isUnreceived != null" >
        is_unreceived = #{record.isUnreceived,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null" >
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.statisticTime != null" >
        statistic_time = #{record.statisticTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update protocol_rule
    set id = #{record.id,jdbcType=BIGINT},
      protocol_id = #{record.protocolId,jdbcType=BIGINT},
      protocol_no = #{record.protocolNo,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      invoice_flag = #{record.invoiceFlag,jdbcType=INTEGER},
      pay_method = #{record.payMethod,jdbcType=INTEGER},
      is_unreceived = #{record.isUnreceived,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      statistic_time = #{record.statisticTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRule" >
    update protocol_rule
    <set >
      <if test="protocolId != null" >
        protocol_id = #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="protocolNo != null" >
        protocol_no = #{protocolNo,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="invoiceFlag != null" >
        invoice_flag = #{invoiceFlag,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="isUnreceived != null" >
        is_unreceived = #{isUnreceived,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="statisticTime != null" >
        statistic_time = #{statisticTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sankuai.mall.finance.fcs.dao.po.ProtocolRule" >
    update protocol_rule
    set protocol_id = #{protocolId,jdbcType=BIGINT},
      protocol_no = #{protocolNo,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      invoice_flag = #{invoiceFlag,jdbcType=INTEGER},
      pay_method = #{payMethod,jdbcType=INTEGER},
      is_unreceived = #{isUnreceived,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      statistic_time = #{statisticTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>